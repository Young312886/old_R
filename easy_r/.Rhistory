#변수들의 상태 확인(빈도수)
table(welfare$sex)
#결측치 처리
welfare$sex <- ifelse(welfare$sex == 9, NA, welfare$sex)
#확인
table(is.na(welfare$sex))
#Changing the key to what we want
welfare$sex <- ifelse(welfare$sex == 1, 'male','female')
table(welfare$sex)
qplot(welfare$sex)
class(welfare$income)
#we can check the merge
summary(welfare$income) #to check the outlier
qplot(welfare$income)+xlim(0,1000)
#as the value should be range of 0,9998
welfare$income <- ifelse(welfare$income %in% c(0,9999),NA, welfare$income)
table(is.na(welfare$income))
sex_income <- welfare %>% filter(!is.na(income)) %>%
group_by (sex) %>% summarise(mean_income = mean(income))
sex_income
ggplot(data= sex_income, aes(x=sex,y=mean_income)) +geom_col()
class(welfare$birth)
summary(welfare$birth)
table(is.na(welfare$birth)) #반드시 결측치 체크
welfare$birth <- ifelse(welfare$birth == 9999, NA, welfare$birth)
welfare$age <- 2015 - welfare$birth
age_income <- welfare %>% filter(!is.na(income)) %>%
group_by (age) %>% summarise(mean_income = mean(income))
age_income
ggplot(data = age_income, aes(x=age,y=mean_income))+geom_line()
welfare <- welfare %>% mutate(age_group = age %/% 10)
table(welfare$age_group)
group_income <- welfare %>% filter(!is.na(income)) %>% group_by(age_group) %>%   summarise(mean_income = mean(income))
group_income
ggplot(data= group_income, aes(x=age_group, y=mean_income)) + geom_col()
sex_income<-welfare %>% filter(!is.na(income)) %>%
group_by(age_group,sex) %>%
summarise(mean_income = mean(income))
sex_income
ggplot(data = sex_income, aes(x =age_group, y= mean_income, fill=sex))+geom_col(position = 'dodge') #분리하기  없으면 위아래로 표시됨
ggplot(data = sex_income, aes(x =age_group, y= mean_income, fill=sex))+geom_line(position = 'dodge')
#직업별 월급 차이
class(welfare$code_job)
#숫자이다
library(readxl)
job_list <- read_excel('data/Koweps_Codebook.xlsx', sheet = 2, col_names =T)
class(job_list)
welfare <- left_join(welfare, job_list, by="code_job")
welfare %>% filter(!is.na(code_job)) %>% select(code_job, job) %>% head()
job_salary <- welfare %>% filter(!is.na(income)&!is.na(job)) %>%
group_by(job) %>% summarise(mean_in = mean(income))
job_salary
top_10 <- job_salary %>% arrange(desc(mean_in)) %>% head(10)
top_10
ggplot(data = top_10, aes(x = reorder(job, mean_in), y=mean_in))+geom_col()+coord_flip()
#아래에서 10
bot10 <- job_salary %>% arrange(mean_in) %>% head(10)
ggplot(data = top_10, aes(x = reorder(job, -mean_in),y=mean_in))+geom_col()+coord_flip()+ylim(0,850)
job_male <- welfare %>%
filter(!is.na(job)&sex == 'male') %>%
group_by(job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
ggplot(data = job_male, aes(x = reorder(job,n), y = n)) + geom_col()+coord_flip()
job_female <- welfare %>%
filter(!is.na(job)&sex == 'female') %>%
group_by(job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
ggplot(data = job_female, aes(x = reorder(job,n), y = n)) + geom_col()+coord_flip()
#종교
class(welfare$religion)
table(welfare$religion)
welfare$religion <- ifelse(welfare$religion == 1, 'Yes','No')
qplot(welfare$religion)
#Change the class
class(welfare$religion)
class(welfare$marriage)
table(welfare$marriage)
welfare$marriage <- ifelse(welfare$marriage == 1, 'marriage',
ifelse(welfare$marriage==3, 'divorce',NA))
table(welfare$marriage)
table(is.na(welfare$marriage))
rel_mar <- welfare %>%
filter(!is.na(welfare$marriage)&!is.na(welfare$religion)) %>%
group_by(religion,marriage) %>%
summarise(n=n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100,1))
rel_mar <- welfare %>%
filter(!is.na(marriage)&!is.na(religion)) %>%
group_by(religion,marriage) %>%
summarise(n=n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100,1))
rel_mar
rel_mar <- welfare %>%
filter(!is.na(marriage)) %>%
group_by(religion,marriage) %>%
summarise(n=n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100,1))
#count로 다르게 측정할 수도 있다.
# 이혼 추출
divorce <- rel_mar %>%
filter(rel_mar == 'divorce') %>%
select(religion, pct)
#count로 다르게 측정할 수도 있다.
# 이혼 추출
divorce <- rel_mar %>%
filter(marriage == 'divorce') %>%
select(religion, pct)
divorce
ggplot(data = divorce, aes(x = religion, y = pct))+geom_col()
rel_mar <- welfare %>%
filter(!is.na(marriage)) %>%
group_by(age,marriage) %>%
summarise(n=n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100,1))
rel_mar
age_mar <- welfare %>%
filter(!is.na(marriage)) %>%
group_by(age,marriage) %>%
summarise(n=n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100,1))
rel_m
age_mar
age_mar <- welfare %>%
filter(!is.na(marriage)) %>%
group_by(age_group,marriage) %>%
summarise(n=n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100,1))
age_mar
#결혼&종교 혼합
rel_mar <- welfare %>%
filter(!is.na(marriage)) %>%
group_by(religion,marriage) %>%
summarise(n=n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100,1))
rel_mar
#특정 연령대 결혼률 검색
mar_10 <- age_mar %>%
filter(age_group != c(90,80,70,60,50)& marriage == 'divorce') %>%
select(age_group , pct)
#특정 연령대 결혼률 검색
mar_10 <- age_mar %>%
filter(age_group != 10 & marriage == 'divorce') %>%
select(age_group , pct)
ggplot(data = mar_10, aes(x = age_group, y = pct)) + geom_col()
# 변수 3개, 연령대 별 종교에 따라서의 결혼 율
age_mar_rel <- welfare %>%
filter(!is.na(marriage) & age_group != 10) %>%
group_by(age_group, religion, marriage) %>%
summarise(n=n()) %>%
mutate(tot = sum(n)) %>%
mutate(pct = round(n/tot*100))
ggplot(data = age_mar_rel, aes(x = age_group, y = pct, fill = religion))+geom_bar(stat = 'identity')
ggplot(data = age_mar_rel, aes(x = age_group, y = pct, fill = marriage))+geom_bar(stat = 'identity')
ggplot(data = age_mar_rel, aes(x = age_group, y = pct, fill = marriage))+geom_bar(stat = 'identity')+guides(fill=guide_legend(reverse=TRUE))
ggplot(data = age_mar_rel, aes(x = age_group, y = pct, fill = marriage))+geom_bar(stat = 'identity')+guides(fill=guide_legend(reverse=TRUE))
ggplot(data = age_mar_rel, aes(x = age_group, y = pct, fill = marriage))+geom_bar(stat = 'identity')+guides(fill=guide_legend(reverse=FALSE))
df_divorce <- age_mar_rel %>%
filter(marriage == 'divorce') %>%
select(age_group, religion, pct)
ggplot(data = df_divorce, aes(x = age_group, y = pct, fill = religion))+geom_bar(stat = 'identity')+guides(fill=guide_legend(reverse=FALSE))
ggplot(data = df_divorce, aes(x = age_group, y = pct, fill = religion))+geom_bar(stat = 'identity')+guides(fill=guide_legend(reverse=TRUE))
ggplot(data = df_divorce, aes(x = age_group, y = pct, fill = religion))+geom_bar(stat = 'identity',position = 'dodge')+guides(fill=guide_legend(reverse=TRUE))
#HR project
HR_df <- read.csv('data/HR_comma_sep.csv')
library(readxl)
library(dplyr)
#14999개의 row와 10개의 col으로 구성
dim(HR_df)
HR_df%>% head(1)
#전체 데이터프레임에서 NA값을 봤을때 True가 없는 것으로 보아 결측치 없음
table(is.na(HR_df))
#1. 연봉이 높다면 만족도도 높을것이다.
salary_df <- HR_df %>%
group_by(salary) %>%
summarise(meandata = mean(satisfaction_level))
salary_df
ggplot(data = salary_df, aes(x=salary, y=meandata))+geom_col()
#2. 부서와 만족도가 영향이 있을 것인가.
sales_df <- HR_df %>%
group_by(sales) %>%
summarise(sales_mean = mean(satisfaction_level)) %>%
arrange(desc(sales_mean))
sales_df
ggplot(data = sales_df, aes(x=reorder(sales,sales_mean), y=sales_mean))+geom_col()+coord_flip()
#3. 부서별, 임금별 만족도 비교
part_df <- HR_df %>%
group_by(sales, salary) %>%
summarise(mean_satisf = mean(satisfaction_level))
part_df
ggplot(part_df, aes(x =sales, y = salary, fill=mean_satisf)) +
geom_tile()+scale_fill_distiller(palette = "RdPu") + coord_flip() +scale_y_discrete(limits = c("high", "medium", "low"))
high_df<- part_df %>%
filter(salary == 'high') %>%
select(sales,mean_satisf) %>%
rename(high_satis = mean_satisf)
medium_df<- part_df %>%
filter(salary == 'medium')%>%
select(sales, mean_satisf ) %>%
rename(med_satis = mean_satisf)
low_df <- part_df %>%
filter(salary == 'low') %>%
select(sales, mean_satisf ) %>%
rename(low_satis = mean_satisf)
#new_bind <- left_join(low_df,medium_df)
#new_bind <- left_join(new_bind, high_df)
#new_bind
high_df_t <- t(high_df)
medium_df_t <- t(medium_df)
low_df_t <- t(low_df)
bind_df <- rbind(high_df_t[2,],medium_df_t[2,],low_df_t[2,] )
new_col = c("accounting", "hr", "IT","management", "marketing", "product_mng", "RandD", "sales", "support", "technical")
new_row = c('high', 'medium','low')
colnames(bind_df)<- new_col
rownames(bind_df)<- new_row
bind_df
bind_df_copy <- bind_df
bind_df_copy$max_col = colnames(bind_df)[apply(bind_df, 1, which.max)]
max <- bind_df_copy$max_col
bind_df_real <- cbind(bind_df, max)
data <- data.frame(x1 = c(0,1,0,1,7),
x2 = c(5,6,0,0,0),
x3 = 3)
data
colnames(data)
data[1,1:3]
max.col(data[1,1:3])
colnames(data)[max.col(data[1,1:3])]
colnames(data)[max.col(data[2,1:3])]
#4. 사건 발생 여부에 따른 근무 시간 차이
pro <- HR_df %>%
select(Work_accident,average_montly_hours,time_spend_company,number_project) %>%
group_by(Work_accident) %>%
summarise(mean_pro = mean(number_project),mean_hour = mean(average_montly_hours),mean_time = mean(time_spend_company))
pro
#so we can't expect that if someone is taking more works, probability of the accident increase
#5. 임금 차이에 따른 근속 년수 차 (높은 임금 = 긴 근속 년수)
salary_time <- HR_df %>%
group_by(salary) %>%
summarise(mean_time = mean(time_spend_company))
salary_time
ggplot(data = salary_time, aes(x = reorder(salary, -mean_time), y = mean_time)) +geom_col()
#6. 마지막 평가 점수 와 진행 프로젝트 수(프로젝트 수가 늘어날수록 평가 점수가 높다)
ev_num <- HR_df %>%
group_by(number_project) %>%
summarise(mean_ev = mean(last_evaluation))
ggplot(data = ev_num, aes(x=number_project, y=mean_ev))+geom_col()
part_df <- HR_df %>%
group_by(sales, salary) %>%
summarise(mean_satisf = mean(satisfaction_level))
part_df
ggplot(part_df, aes(x =sales, y = salary, fill=mean_satisf)) +
geom_tile()+scale_fill_distiller(palette = "RdPu") + coord_flip() +scale_y_discrete(limits = c("high", "medium", "low"))
library(ggplot2)
part_df <- HR_df %>%
group_by(sales, salary) %>%
summarise(mean_satisf = mean(satisfaction_level))
part_df
ggplot(part_df, aes(x =sales, y = salary, fill=mean_satisf)) +
geom_tile()+scale_fill_distiller(palette = "RdPu") + coord_flip() +scale_y_discrete(limits = c("high", "medium", "low"))
ggplot(data = salary_df, aes(x=salary, y=meandata))+geom_col()
ggplot(data = sales_df, aes(x=reorder(sales,sales_mean), y=sales_mean))+geom_col()+coord_flip()
ggplot(part_df, aes(x =sales, y = salary, fill=mean_satisf)) +
geom_tile()+scale_fill_distiller(palette = "RdPu") + coord_flip() +scale_y_discrete(limits = c("high", "medium", "low"))
data <- data.frame(x1 = c(0,1,0,1,7),
x2 = c(5,6,0,0,0),
x3 = 3)
data
colnames(data)
data[1,1:3]
max.col(data[1,1:3])
colnames(data)[max.col(data[1,1:3])]
colnames(data)[max.col(data[2,1:3])]
data <- data.frame(x1 = c(0,1,0,1,7),
x2 = c(5,6,0,0,0),
x3 = 3)
data
colnames(data)
data[1,1:3]
max.col(data[1,1:3])
colnames(data)[max.col(data[1,1:3])]
colnames(data)[max.col(data[2,1:3])]
pro <- HR_df %>%
select(Work_accident,average_montly_hours,time_spend_company,number_project) %>%
group_by(Work_accident) %>%
summarise(mean_pro = mean(number_project),mean_hour = mean(average_montly_hours),mean_time = mean(time_spend_company))
pro
#5. 임금 차이에 따른 근속 년수 차 (높은 임금 = 긴 근속 년수)
salary_time <- HR_df %>%
group_by(salary) %>%
summarise(mean_time = mean(time_spend_company))
salary_time
ggplot(data = salary_time, aes(x = reorder(salary, -mean_time), y = mean_time)) +geom_col()
#6. 마지막 평가 점수 와 진행 프로젝트 수(프로젝트 수가 늘어날수록 평가 점수가 높다)
ev_num <- HR_df %>%
group_by(number_project) %>%
summarise(mean_ev = mean(last_evaluation))
ggplot(data = ev_num, aes(x=number_project, y=mean_ev))+geom_col()
ggplot(data = salary_df, aes(x=salary, y=meandata))+geom_col()+scale_fill_brewer(palette = "OrRd", direction = -1)
ggplot(data = salary_df, aes(x=salary, y=meandata))+geom_col()+scale_fill_brewer(palette = "OrRd", direction = -1)
ggplot(data = salary_df, aes(x=salary, y=meandata))+geom_col()+scale_x_discrete(limits = c("high", "medium", "low"))
ggplot(data = salary_df, aes(x=salary, y=meandata))+geom_col()+scale_x_discrete(limits = c("high", "medium", "low"))+scale_fill_brewer(palette = 'Green')
ggplot(data = salary_df, aes(x=salary, y=meandata))+geom_col()+scale_x_discrete(limits = c("high", "medium", "low"))+scale_fill_brewer(palette = 'Greens')
ggplot(data = salary_df, aes(x=salary, y=meandata))+geom_col()+scale_x_discrete(limits = c("high", "medium", "low"))+scale_fill_brewer(palette = 'Oranges')
ggplot(data = sales_df, aes(x=reorder(sales,sales_mean), y=sales_mean))+geom_col()+coord_flip()
ggplot(data = sales_df, aes(x=reorder(sales,sales_mean), y=sales_mean))+geom_col()+coord_flip()+scale_fill_brewer(palette='Oranges')
#유의미한 수치의 표표
ggplot(data = ev_num, aes(x=number_project, y=mean_ev))+geom_col()+scale_colour_hue(l=45)
#유의미한 수치의 표표
ggplot(data = ev_num, aes(x=number_project, y=mean_ev))+geom_col()+ scale_fill_grey(start=0.7, end=0)
library(RColorBrewer)
#유의미한 수치의 표표
ggplot(data = ev_num, aes(x=number_project, y=mean_ev))+geom_col()+ scale_fill_grey(start=0.7, end=0)
#유의미한 수치의 표표
ggplot(data = ev_num, aes(x=number_project, y=mean_ev))+geom_col()+  scale_colour_manual(values=c(“red”, “blue”))
#유의미한 수치의 표표
ggplot(data = ev_num, aes(x=number_project, y=mean_ev))+geom_col()+ scale_colour_manual(values=c(“red”, “blue”))
#유의미한 수치의 표표
ggplot(data = ev_num, aes(x=number_project, y=mean_ev))+geom_col()+ scale_colour_manual(values=c('red', 'blue'))
#유의미한 수치의 표표
ggplot(data = ev_num, aes(x=number_project, y=mean_ev,fill='Tree'))+geom_col()+ scale_colour_manual(values=c('red', 'blue'))
#유의미한 수치의 표표
ggplot(data = ev_num, aes(x=number_project, y=mean_ev,fill=Tree))+geom_col()+ scale_colour_manual(values=c('red', 'blue'))
#유의미한 수치의 표표
ggplot(data = ev_num, aes(x=number_project, y=mean_ev,fill=number_project))+geom_col()+ scale_colour_manual(values=c('red', 'blue'))
#표 그리기
ggplot(data = salary_df, aes(x=salary, y=meandata, fill = salary))+geom_col()+scale_x_discrete(limits = c("high", "medium", "low"))+scale_fill_brewer(palette = 'Oranges')
#표 그리기
ggplot(data = sales_df, aes(x=reorder(sales,sales_mean), y=sales_mean, fill = sales))+geom_col()+coord_flip()+scale_fill_brewer(palette='Oranges')
#표 그리기
ggplot(data = sales_df, aes(x=reorder(sales,sales_mean), y=sales_mean))+geom_col()+coord_flip()
#표 그리기
ggplot(data = sales_df, aes(x=reorder(sales,sales_mean), y=sales_mean,fill = sales))+geom_col()+coord_flip()+scale_fill_brewer(palette='Set3')
#HR project
HR_df <- read.csv('data/HR_df.csv')
#HR project
HR_df <- read.csv('data/HR_comma_sep.csv')
library(readxl)
#HR project
HR_df <- read.csv('data/HR_comma_sep.csv')
library(readxl)
library(dplyr)
library(tidyverse)
#14999개의 row와 10개의 col으로 구성
dim(HR_df)
#첫번째 줄 출력해서 어떤 값들이 들어가있는지 확인
HR_df%>% head(1)
#결측치 확인
table(is.na(HR_df))
#전체 데이터프레임에서 NA값을 봤을때 True가 없는 것으로 보아 결측치 없음
#################################################################
#가설1. 연봉이 높다면 만족도도 높을것이다.
salary_df <- HR_df %>%
group_by(salary) %>%
summarise(meandata = mean(satisfaction_level))
salary_df
#막대 그래프
ggplot(data = salary_df, aes(x=salary, y=meandata))+geom_col()
#연봉 high, medium, low 군집별 만족도의 평균을 낸 값을 막대 그래프로 보았기 때문에
# 만족도 평균은 high그룹이 높다는 것을 알 수 있지만
# 해당 군집별 만족도 분포를 알기 어렵다는 단점이 있었다.
# box plot으로 대략적인 분포까지 확인해보자
#box plot
#전체 satisfaction_level의 분포를 보면
boxplot(HR_df $ satisfaction_level)
max(HR_df$satisfaction_level)
min(HR_df$satisfaction_level)
#min 0.09~ max 1까지 넓게 존재
#이제 연봉 h,m,l 별 만족도 분포를 그려보자자
boxplot(satisfaction_level~salary,
data = HR_df,
main = "연봉에 따른 만족도 분포",
xlab = "salary",
ylab = 'satisfaction',
col = 'orange')
# 연봉이 high인 군집이 medium, low에 비해
# 제1사분위수부터 제3사분위수까지의 영역이 다른 군집에 비해 좁은 것으로 보인다.
library(ggplot2)
#14999개의 row와 10개의 col으로 구성
dim(HR_df)
#첫번째 줄 출력해서 어떤 값들이 들어가있는지 확인
HR_df%>% head(1)
#결측치 확인
table(is.na(HR_df))
#################################################################
#가설1. 연봉이 높다면 만족도도 높을것이다.
salary_df <- HR_df %>%
group_by(salary) %>%
summarise(meandata = mean(satisfaction_level))
salary_df
#막대 그래프
ggplot(data = salary_df, aes(x=salary, y=meandata))+geom_col()
#box plot
#전체 satisfaction_level의 분포를 보면
boxplot(HR_df $ satisfaction_level)
#box plot
#전체 satisfaction_level의 분포를 보면
boxplot(HR_df $ satisfaction_level)
max(HR_df$satisfaction_level)
min(HR_df$satisfaction_level)
library(readxl)
library(dplyr)
library(tidyverse)
select <- dplyr::select
#3. 부서별, 임금별 만족도 비교
part_df <- HR_df %>%
group_by(sales, salary) %>%
summarise(mean_satisf = mean(satisfaction_level))
part_df
high_df<- part_df %>%
filter(salary == 'high')%>%
select(sales,mean_satisf) %>%
rename(high_satis = mean_satisf)
medium_df<- part_df %>%
filter(salary == 'medium')%>%
select(sales, mean_satisf ) %>%
rename(med_satis = mean_satisf)
low_df <- part_df %>%
filter(salary == 'low') %>%
select(sales, mean_satisf ) %>%
rename(low_satis = mean_satisf)
high_df_t <- t(high_df)
medium_df_t <- t(medium_df)
low_df_t <- t(low_df)
bind_df <- rbind(high_df_t[2,],medium_df_t[2,],low_df_t[2,])
new_col = c("accounting", "hr", "IT","management", "marketing", "product_mng", "RandD", "sales", "support", "technical")
new_row = c('high', 'medium','low')
colnames(bind_df)<- new_col
rownames(bind_df)<- new_row
bind_df
bind_df_copy <- bind_df
bind_df_copy$max_col = colnames(bind_df)[apply(bind_df, 1, which.max)]
max <- bind_df_copy$max_col
bind_df_real <- cbind(bind_df, max)
bind_df_real
#시각화화
ggplot(part_df, aes(x =sales, y = salary, fill=mean_satisf)) +
geom_tile()+scale_fill_distiller(palette = "RdPu") + coord_flip() +scale_y_discrete(limits = c("high", "medium", "low"))
library(readxl)
library(dplyr)
library(tidyverse)
#4. 사건 발생 여부에 따른 근무 시간 차이
pro <- HR_df %>%
select(Work_accident,average_montly_hours,time_spend_company,number_project) %>%
group_by(Work_accident) %>%
summarise(mean_pro = mean(number_project),mean_hour = mean(average_montly_hours),mean_time = mean(time_spend_company))
pro
#so we can't expect that if someone is taking more works, probability of the accident increase
#5. 임금 차이에 따른 근속 년수 차 (높은 임금 = 긴 근속 년수)
salary_time <- HR_df %>%
group_by(salary) %>%
summarise(mean_time = mean(time_spend_company))
salary_time
ggplot(data = salary_time, aes(x = reorder(salary, -mean_time), y = mean_time)) +geom_col()
ev_num <- HR_df %>%
group_by(number_project) %>%
summarise(mean_ev = mean(last_evaluation))
ggplot(data = ev_num, aes(x=number_project, y=mean_ev))+geom_col()
#4. 사건 발생 여부에 따른 근무 시간 차이
pro <- HR_df %>%
select(Work_accident,average_montly_hours,time_spend_company,number_project) %>%
group_by(Work_accident) %>%
summarise(mean_pro = mean(number_project),mean_hour = mean(average_montly_hours),mean_time = mean(time_spend_company))
pro
#so we can't expect that if someone is taking more works, probability of the accident increase
#5. 임금 차이에 따른 근속 년수 차 (높은 임금 = 긴 근속 년수)
salary_time <- HR_df %>%
group_by(salary) %>%
summarise(mean_time = mean(time_spend_company))
salary_time
ggplot(data = salary_time, aes(x = reorder(salary, -mean_time), y = mean_time)) +geom_col()
ev_num <- HR_df %>%
group_by(number_project) %>%
summarise(mean_ev = mean(last_evaluation))
ggplot(data = ev_num, aes(x=number_project, y=mean_ev))+geom_col()
k <- read.csv('csv_exam.csv')
k <- read.csv('csv_exam.csv')
k <- read.csv('C:\Users\YoungMin\Documents\Ubion\R')
k <- read.csv('C:/Users/YoungMin/Documents/Ubion/R/csv_exam.csv')
print(k)
View(k)
table(k)
h <- k[class == 1]
h <- k[class = 1]
h <- k(class = 1)
h <- k.(class = 1)
exam <- read.csv("csv_exam.csv")
exam
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
exam %>% exam(class == 1)
library(dplyr)
exam %>% exam(class == 1)
exam %>% (class == 1)
exam %>% filter(class == 1)
cars <- as.data.frame(ggplot2::mpg)
cars
lower <- cars %>% filter(displ <= 4)
mean(lower$hwy)
upper <- cars %>% filter(displ >= 5)
mean(upper$hwy)
help(MinMaxScaler)
